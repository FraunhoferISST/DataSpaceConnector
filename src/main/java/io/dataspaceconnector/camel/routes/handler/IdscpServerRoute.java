package io.dataspaceconnector.camel.routes.handler;

import org.apache.camel.builder.RouteBuilder;
import org.springframework.stereotype.Component;

@Component
public class IdscpServerRoute extends RouteBuilder {

    @Override
    public void configure() throws Exception {
        from("idscp2server://0.0.0.0:29292?sslContextParameters=#serverSslContext&useIdsMessages=true")
                .routeId("idscpServer")
                .process("TypeExtractionProcessor")
                .process("IncomingIdscpMessageParser")
                .choice()
                    .when(simple("${exchangeProperty.ids-type} == 'DescriptionRequestMessage'"))
                        .doTry()
                            .to("direct:descriptionRequestHandler")
                            .doCatch(Exception.class)
                        .end()
                    .endChoice()
                    .when(simple("${exchangeProperty.ids-type} == 'DescriptionRequestMessageImpl'"))
                        .doTry()
                            .to("direct:descriptionRequestHandler")
                            .doCatch(Exception.class)
                        .end()
                    .endChoice()
                    .when(simple("${exchangeProperty.ids-type} == 'ContractRequestMessage'"))
                        .doTry()
                            .to("direct:contractRequestHandler")
                            .doCatch(Exception.class)
                        .end()
                    .endChoice()
                    .when(simple("${exchangeProperty.ids-type} == 'ContractRequestMessageImpl'"))
                        .doTry()
                            .to("direct:contractRequestHandler")
                            .doCatch(Exception.class)
                        .end()
                    .endChoice()
                    .when(simple("${exchangeProperty.ids-type} == 'ContractAgreementMessage'"))
                        .doTry()
                            .to("direct:contractAgreementHandler")
                            .doCatch(Exception.class)
                        .end()
                    .endChoice()
                    .when(simple("${exchangeProperty.ids-type} == 'ContractAgreementMessageImpl'"))
                        .doTry()
                            .to("direct:contractAgreementHandler")
                            .doCatch(Exception.class)
                        .end()
                    .endChoice()
                    .when(simple("${exchangeProperty.ids-type} == 'ArtifactRequestMessage'"))
                        .doTry()
                            .to("direct:artifactRequestHandler")
                            .doCatch(Exception.class)
                        .end()
                    .endChoice()
                    .when(simple("${exchangeProperty.ids-type} == 'ArtifactRequestMessageImpl'"))
                        .doTry()
                            .to("direct:artifactRequestHandler")
                            .doCatch(Exception.class)
                        .end()
                    .endChoice()
                    .when(simple("${exchangeProperty.ids-type} == 'NotificationMessage'"))
                        .doTry()
                            .to("direct:notificationMsgHandler")
                            .doCatch(Exception.class)
                        .end()
                    .endChoice()
                    .when(simple("${exchangeProperty.ids-type} == 'NotificationMessageImpl'"))
                        .doTry()
                            .to("direct:notificationMsgHandler")
                            .doCatch(Exception.class)
                        .end()
                    .endChoice()
                    .when(simple("${exchangeProperty.ids-type} == 'ResourceUpdateMessage'"))
                        .doTry()
                            .to("direct:resourceUpdateHandler")
                            .doCatch(Exception.class)
                        .end()
                    .endChoice()
                    .when(simple("${exchangeProperty.ids-type} == 'ResourceUpdateMessageImpl'"))
                        .doTry()
                            .to("direct:resourceUpdateHandler")
                            .doCatch(Exception.class)
                        .end()
                    .endChoice()
                .end()
                .process("OutgoingIdscpMessageParser");
    }

}

name: CI

on:
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.head_ref }}
  cancel-in-progress: true

env:
  REGISTRY: ${{ secrets.IMAGE_REGISTRY }}
  OWNER: ${{ secrets.REPO_USER }}

jobs:
  style:
    timeout-minutes: 5
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v1
      with:
       java-version: 11
    - name: Cache maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Run style checks
      run: mvn -B -U -Dmaven.javadoc.skip=true checkstyle:check --file pom.xml

  license:
    timeout-minutes: 5
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v1
      with:
       java-version: 11
    - name: Cache maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Run style checks
      run: mvn -B -U -Dmaven.javadoc.skip=true license:check --file pom.xml

  linting:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Lint Docker
      uses: hadolint/hadolint-action@v1.5.0
      with:
        dockerfile: Dockerfile
        config: .hadolint.yaml
    - name: Lint Docker and Yaml
      uses: bridgecrewio/checkov-action@master
      with:
        directory: .
        quiet: true
        output_format: github_failed_only
        download_external_modules: true
        soft_fail: true

  unit-and-integration-tests:
    needs: [style, license, linting]
    timeout-minutes: 30
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        java: [11, 12, 13, 14, 15, 16]

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java }}
    - name: Cache maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Unit- and Integrationtests
      run: mvn -B -U verify --file pom.xml -Prelease

  test-introspection:
    needs: unit-and-integration-tests
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v1
      with:
       java-version: 11
    - name: Cache maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Run Mutation Tests
      run: mvn -B -U -Dmaven.javadoc.skip=true test org.pitest:pitest-maven:mutationCoverage --file pom.xml

  build-test-image:
    needs: unit-and-integration-tests
    timeout-minutes: 15
    runs-on: ubuntu-latest

    steps:
      -
        name: Checkout Repo
        uses: actions/checkout@v2
      -
        name: Build registry path
        id: get_repo
        run: echo ::set-output name=IMAGE::"$REGISTRY/$OWNER/dataspace-connector"
      -
       name: Login to registry
       uses: docker/login-action@v1
       with:
         # This should use REGISTRY instead of the secret directly
         registry: ${{ secrets.IMAGE_REGISTRY }}
         username: ${{ github.actor }}
         password: ${{ secrets.GITHUB_TOKEN }}
      -
       name: Build image
       run: |
        docker build . -t $IMAGE:ci
       env:
         IMAGE: ${{ steps.get_repo.outputs.IMAGE }}
      -
       name: Push image
       run: |
         docker push $IMAGE:ci
       env:
         IMAGE: ${{ steps.get_repo.outputs.IMAGE }}

  e2e:
    needs: build-test-image
    timeout-minutes: 30
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Cache maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Setup environment
        run: |
          curl -sfL https://get.k3s.io | K3S_KUBECONFIG_MODE=777 sh -
          cat /etc/rancher/k3s/k3s.yaml
          mkdir -p ~/.kube
          cp /etc/rancher/k3s/k3s.yaml ~/.kube/config
      - name: Test environment
        run: |
          kubectl cluster-info
      - name: Run scripts
        run: |
          ./scripts/ci/e2e/setup-provider-consumer.sh
